// Code generated by MockGen. DO NOT EDIT.
// Source: avito-intern/internal/app/balance (interfaces: Usecase)

// Package mock_balance is a generated GoMock package.
package mock_balance

import (
	models "avito-intern/internal/app/balance/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// BalanceUsecase is a mock of Usecase interface.
type BalanceUsecase struct {
	ctrl     *gomock.Controller
	recorder *BalanceUsecaseMockRecorder
}

// BalanceUsecaseMockRecorder is the mock recorder for BalanceUsecase.
type BalanceUsecaseMockRecorder struct {
	mock *BalanceUsecase
}

// NewBalanceUsecase creates a new mock instance.
func NewBalanceUsecase(ctrl *gomock.Controller) *BalanceUsecase {
	mock := &BalanceUsecase{ctrl: ctrl}
	mock.recorder = &BalanceUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *BalanceUsecase) EXPECT() *BalanceUsecaseMockRecorder {
	return m.recorder
}

// GetBalance mocks base method.
func (m *BalanceUsecase) GetBalance(arg0 int64) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", arg0)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *BalanceUsecaseMockRecorder) GetBalance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*BalanceUsecase)(nil).GetBalance), arg0)
}

// TransferMoney mocks base method.
func (m *BalanceUsecase) TransferMoney(arg0, arg1 int64, arg2 float64) (*models.TransferMoney, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransferMoney", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.TransferMoney)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TransferMoney indicates an expected call of TransferMoney.
func (mr *BalanceUsecaseMockRecorder) TransferMoney(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransferMoney", reflect.TypeOf((*BalanceUsecase)(nil).TransferMoney), arg0, arg1, arg2)
}

// UpdateBalance mocks base method.
func (m *BalanceUsecase) UpdateBalance(arg0 int64, arg1 float64, arg2 int) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateBalance", arg0, arg1, arg2)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateBalance indicates an expected call of UpdateBalance.
func (mr *BalanceUsecaseMockRecorder) UpdateBalance(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBalance", reflect.TypeOf((*BalanceUsecase)(nil).UpdateBalance), arg0, arg1, arg2)
}
